use serde::{Deserialize, Serialize};
use std::fmt;

#[derive(Debug, Serialize, Deserialize)]
pub struct Error {
    /// The server error code returned
    code: i32,
    /// The error message generated by the server
    message: String,
}

impl Error {
    pub fn code(&self) -> i32 {
        self.code
    }

    pub fn message(&self) -> &str {
        &self.message
    }
}

impl std::error::Error for Error {}

impl fmt::Display for Error {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        f.write_str("Kaggle Api Server Error")?;
        write!(f, ": code: {}", self.code)?;
        write!(f, ", message: {}", self.message)
    }
}
